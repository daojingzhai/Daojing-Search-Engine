Python
使用
Redis
数据
据库
数据库
简介
是
开源
的
高性
性能
高性能
KeyValue
可以
用于
缓存
等
用途
提供
事务
和
持久
化
支持
保证
并发
安全
安全性
并
TTLtime
to
life
服务
Ubuntu
系统
用包
管理
理器
管理器
安装
sudo
aptget
install
redisserver
客户
客户端
redistools
进入
rediscli
登录
远程
h
host
p
port
a
password
基本
操作
基本操作
指令
均
为
大小
小写
大小写
敏感
但是
对
不
字符
字符串
作为
Key
常用
命令
操作命令
有
SET
key
val
设置
键值
对无则
新建
则
更新
127
0
1
6379
set
user
name
OK
DEL
删除
返回
条数
del
integer
GET
Value
get
EXISTS
检查
指定
是否
存在
exists
KEYS
pattern
通配符
筛选
显示
所有
符合
条件
符合条件
键
keys
playing
_
yichya
2
yy
3
online
4
5
RANDOMKEY
随机
一个
randomkey
hm1
RENAME
newname
命名
重命名
user2
234
233
rename
nil
RENAMEX
允许
新名
与
已有
键名
重复
QUIT
退出
redis
TTL
EXPIRE
seconds
以
秒
单位
生存
周期
expire
10000
PEXIRE
mseconds
毫秒
剩余
ttl
9996
PTTL
pttl
9991684
PERSIST
将
设
永久
persist
EXPIREAT
timestamp
Unix
时间
戳
过期
哈希
Hash
表
结构
数据结构
表中
共享
同样
有着
比
通常
更
快
速度
操作速度
HSET
table
示例
hset
hml
执行
hkeys
看出
hash
HDEL
HGET
得到
HKEYS
tabel
表上
HGETALL
value
hgetall
MULTI
开启
块
multi
EXEC
提交
DISCARD
放弃
WATCH
在
之前
监控
Keys
若
之后
任何
值
发生
了
变化
都
被
同时
Null
multibulk
UNWATCH
redispy
pythonredis
连接
接器
连接器
python
包
此
模块
pip
环境
下
导入
from
import
r
封装
类
类似
API
JSON
存储
除
RedisHash
之外
处理
rset
True
rget
对于
复杂
类型
数据类型
非常
不便
result
listresult
n
m
e
y
i
c
选择
内置
json
进行
编码
解码
另外
实例
只
维护
数据表
而
应用
中
经常
出现
经常出现
需要
多个
字典
情况
草民
建议
prefixkey
来
模拟
写
简单
Redisdict
适配
配器
适配器
方式
class
RedisDict
def
__
init
self
prefix
selfdata
selfprefix
selfdatagetredis
if
is
None
return
else
jsonloadsredis
jsondumpsval
selfdatasetredis
pop
selfdatadeleteredis
iter
for
item
in
selfdatakeysselfprefix
decodeitem
yield
decode
sep
keyfind
keysep
main
RedisCache
printitem
printrgetitem
selfsession
selftable
selfsessiondeletetable
selfsessionhgetselftable
selfsessionhsetselftable
selfsessionhdelselftable
selfsessionhkeysselftable
用
dict
这个
实现
比用
前缀
区分
高效
得
多
pipeline
RedisServer
TCP
务器
服务器
pipline
消息
队列
提高
批量
效率
